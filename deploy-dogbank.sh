#!/bin/bash

# Script de deploy completo do DogBank no Kubernetes
# Uso: ./deploy-dogbank.sh

set -e

# Cores para output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${BLUE}üêï DogBank - Deploy no Kubernetes${NC}"
echo -e "${BLUE}===================================${NC}"

# Verificar se kubectl est√° instalado
if ! command -v kubectl &> /dev/null; then
    echo -e "${RED}‚ùå kubectl n√£o est√° instalado${NC}"
    exit 1
fi

# Criar namespace se n√£o existir
echo -e "\n${BLUE}üìÅ Criando namespace 'production'...${NC}"
kubectl create namespace production --dry-run=client -o yaml | kubectl apply -f -

# Criar secret do PostgreSQL
echo -e "\n${BLUE}üîê Criando secret do PostgreSQL...${NC}"
kubectl create secret generic dogbank-postgres-secret \
  --from-literal=POSTGRES_USER=dogbank \
  --from-literal=POSTGRES_PASSWORD=dog1234 \
  --from-literal=POSTGRES_DB=dogbank \
  -n production \
  --dry-run=client -o yaml | kubectl apply -f -

echo -e "${GREEN}‚úÖ Secret criada com sucesso!${NC}"

# Aplicar o deployment completo
echo -e "\n${BLUE}üöÄ Aplicando deployment completo...${NC}"
kubectl apply -f dogbank-deployment.yaml

# Aguardar PostgreSQL ficar pronto
echo -e "\n${BLUE}‚è≥ Aguardando PostgreSQL inicializar...${NC}"
kubectl wait --for=condition=ready pod -l app=postgres -n production --timeout=120s

# Verificar status dos pods
echo -e "\n${BLUE}üìä Status dos Pods:${NC}"
kubectl get pods -n production

# Verificar services
echo -e "\n${BLUE}üåê Services criados:${NC}"
kubectl get services -n production

# Testar conex√£o com auth-service
echo -e "\n${BLUE}üß™ Testando auth-service...${NC}"
echo -e "${YELLOW}Para testar o auth-service, execute:${NC}"
echo "kubectl port-forward service/auth-service 8088:8088 -n production"
echo ""
echo "Em outro terminal:"
echo 'curl -X POST http://localhost:8088/api/auth/login \\'
echo '  -H "Content-Type: application/json" \\'
echo '  -d '\''{"cpf": "78912345603", "senha": "123456"}'\'''

# Informa√ß√µes √∫teis
echo -e "\n${GREEN}üéâ Deploy conclu√≠do com sucesso!${NC}"
echo -e "\n${BLUE}üìù Comandos √∫teis:${NC}"
echo "‚Ä¢ Ver logs: kubectl logs -f deployment/auth-module -n production"
echo "‚Ä¢ Entrar no PostgreSQL: kubectl exec -it deployment/postgres -n production -- psql -U dogbank"
echo "‚Ä¢ Ver todos os recursos: kubectl get all -n production"
echo "‚Ä¢ Deletar tudo: kubectl delete namespace production"

# Verificar se h√° algum pod com erro
PODS_WITH_ERROR=$(kubectl get pods -n production --no-headers | grep -E "Error|CrashLoopBackOff|Pending" | wc -l)
if [ $PODS_WITH_ERROR -gt 0 ]; then
    echo -e "\n${RED}‚ö†Ô∏è  Aten√ß√£o: Alguns pods est√£o com problemas${NC}"
    kubectl get pods -n production | grep -E "Error|CrashLoopBackOff|Pending"
fi