name: docker-publish
on:
  push:
    branches: [main]
    tags: ["v*.*.*"]
  workflow_dispatch: {}   # permite rodar manualmente

env:
  BACKEND_IMAGE: schawirin/dogbank-backend
  FRONTEND_IMAGE: schawirin/dogbank-frontend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: backend
            context: ./dogbank
            dockerfile: ./dogbank/Dockerfile
            image: schawirin/dogbank-backend
          - name: frontend
            context: ./dogbank-frontend
            dockerfile: ./dogbank-frontend/Dockerfile
            image: schawirin/dogbank-frontend

    steps:
      - uses: actions/checkout@v4

      # ===== (opcional) validar Quality Gate tambÃ©m no push =====
      - name: Upload Java coverage (se existir)
        run: |
          if [ -f ./dogbank/target/site/jacoco/jacoco.xml ]; then
            npx -y @datadog/datadog-ci@latest coverage upload --format=jacoco ./dogbank/target/site/jacoco/jacoco.xml
          fi
        env: { DD_API_KEY: ${{ secrets.DD_API_KEY }}, DD_SITE: ${{ secrets.DD_SITE }} }

      - name: Upload Frontend coverage (se existir)
        run: |
          if [ -f ./dogbank-frontend/coverage/lcov.info ]; then
            npx -y @datadog/datadog-ci@latest coverage upload --format=lcov ./dogbank-frontend/coverage/lcov.info
          fi
        env: { DD_API_KEY: ${{ secrets.DD_API_KEY }}, DD_SITE: ${{ secrets.DD_SITE }} }

      - name: Evaluate Datadog Quality Gates
        run: npx -y @datadog/datadog-ci@latest gate evaluate --timeout 120
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}
          DD_APP_KEY: ${{ secrets.DD_APP_KEY }}
          DD_SITE: ${{ secrets.DD_SITE }}

      # ===== Docker Hub login + buildx =====
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Compute tags
        id: vars
        run: |
          SHA="${GITHUB_SHA::7}"
          echo "sha=${SHA}" >> $GITHUB_OUTPUT
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "version=" >> $GITHUB_OUTPUT
          fi

      - name: Build & Push ${{ matrix.service.name }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          push: true
          platforms: linux/amd64
          tags: |
            ${{ matrix.service.image }}:latest
            ${{ matrix.service.image }}:${{ steps.vars.outputs.sha }}
            ${{ steps.vars.outputs.version && format('{0}:{1}', matrix.service.image, steps.vars.outputs.version) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
